editor actions:
  * hitting enter multiple times to create arbitrary space (prevent or allow plugin-based validation of the AST)
  * maintain header hierarchy (no h2 without a prior h1, no h3 w/out prior h2, etc)

abc|def|ghi

i=0, length=0, offset=3
i=1, length=3, offset=3

length === offset


abc <b>bold <i>italic+bold</li> bold2</b> def

const PickColorCard = {
  name: 'pick-color',
  edit: {
    setup(element, options, {save, cancel}, payload) {
    //                      ^ env - an object of runtime options and hooks
      let component = EditPickColorComponent.create(payload);
      component.save = function(newPayload) {
        save(newPayload);
      };
      component.cancel = cancel;
      component.appendTo(element);
      return {component};
    },
    teardown({component}) {
      Ember.run(component,component.destroy);
    }
  },
  render: {
    setup(element, options, {edit}, payload) {
      let component = PickColorComponent.create(payload);
      component.appendTo(element);
      if (options.mode === 'edit') {
        $(element).click(function(){
          window.popup(payload.editUrl);
        });
      }
      return {component};
    },
    teardown({component}) {
      Ember.run(component, component.destroy);
    };
  }
};

new ContentKit.Edtior(editorElement, cards: [
  PickColorCard
]});

var domRenderer = new MobiledocDOMRenderer();
var rendered = renderer.render(mobiledoc, {
  cardOptions: { mode: 'highQuality' },
  unknownCard(element, options, {name}, payload) {
    // manage unknown name
    // can only be rendered, has no teardown
  },
  cards: [
    PickColorCard
  ]
});
